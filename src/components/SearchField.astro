---
import "@pagefind/default-ui/css/ui.css";

interface Props {
  className?: string;
  placeholder?: string;
}

const { className = "", placeholder = "Search articles... (⌘K)" } = Astro.props;
---

<div class="search-field-wrapper">
  <div id="search" class={className}></div>
  <kbd class="search-shortcut">⌘K</kbd>
</div>

<script>
  import { PagefindUI } from "@pagefind/default-ui";

  const initSearch = async () => {
    const search = document.querySelector("#search");
    if (!search) return;

    try {
      // Initialize search with new UI instance
      new PagefindUI({
        element: "#search",
        showImages: false,
        resetStyles: false,
        showEmptyFilters: false,
      });

      // Handle keyboard shortcut
      document.addEventListener("keydown", (e) => {
        if ((e.metaKey || e.ctrlKey) && e.key === "k") {
          e.preventDefault();
          const searchInput = document.querySelector<HTMLInputElement>(".pagefind-ui__search-input");
          if (searchInput) {
            searchInput.focus();
          }
        }

        // Handle escape key to close search
        if (e.key === "Escape") {
          const searchInput = document.querySelector<HTMLInputElement>(".pagefind-ui__search-input");
          if (searchInput) {
            searchInput.blur();
            searchInput.value = "";
            const event = new Event("input", { bubbles: true });
            searchInput.dispatchEvent(event);
          }
        }
      });

      // Handle URL search params
      const searchParams = new URLSearchParams(window.location.search);
      const searchQuery = searchParams.get("q");
      if (searchQuery) {
        const searchInput = document.querySelector<HTMLInputElement>(".pagefind-ui__search-input");
        if (searchInput) {
          searchInput.value = searchQuery;
          const event = new Event("input", { bubbles: true });
          searchInput.dispatchEvent(event);
        }
      }

      // Update URL when searching
      const searchInput = document.querySelector<HTMLInputElement>(".pagefind-ui__search-input");
      if (searchInput) {
        let debounceTimer: number;
        searchInput.addEventListener("input", (e) => {
          const target = e.target as HTMLInputElement;
          
          // Clear previous timer
          clearTimeout(debounceTimer);
          
          // Set new timer
          debounceTimer = window.setTimeout(() => {
            const searchParams = new URLSearchParams(window.location.search);
            if (target.value) {
              searchParams.set("q", target.value);
            } else {
              searchParams.delete("q");
            }
            const newUrl = `${window.location.pathname}${searchParams.toString() ? "?" + searchParams.toString() : ""}`;
            window.history.replaceState(null, "", newUrl);
          }, 300);
        });
      }
    } catch (error) {
      console.error("Error initializing search:", error);
    }
  };

  // Initialize search when the page loads
  document.addEventListener("DOMContentLoaded", initSearch);

  // Handle astro:page-load event for view transitions
  document.addEventListener("astro:page-load", initSearch);
</script>

<style>
  .search-field-wrapper {
    position: relative;
    display: flex;
    align-items: center;
    width: 100%;
  }

  /* Dark theme styles */
  :global(:root) {
    --pagefind-ui-scale: 1;
    --pagefind-ui-primary: #82F9A1;
    --pagefind-ui-text: #b8c1c7;
    --pagefind-ui-background: rgba(28, 42, 52, 0.95);
    --pagefind-ui-border: #4a5c6b;
    --pagefind-ui-tag: #4a5c6b;
    --pagefind-ui-border-width: 2px;
    --pagefind-ui-border-radius: 12px;
    --pagefind-ui-image-border-radius: 8px;
    --pagefind-ui-image-box-ratio: 3 / 2;
    --pagefind-ui-font: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }

  .search-shortcut {
    position: absolute;
    right: 16px;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(74, 92, 107, 0.3);
    border: 1px solid var(--pagefind-ui-border);
    color: var(--pagefind-ui-text);
    padding: 4px 8px;
    border-radius: 6px;
    font-size: 12px;
    pointer-events: none;
    opacity: 0.8;
    transition: opacity 0.2s ease;
  }

  /* Hide shortcut when search is focused */
  :global(.pagefind-ui__search-input:focus) ~ .search-shortcut {
    opacity: 0;
  }

  @media (max-width: 768px) {
    .search-shortcut {
      display: none;
    }
  }

  /* Loading State */
  :global(.pagefind-ui.pagefind-ui--loading) {
    position: relative;
  }

  :global(.pagefind-ui.pagefind-ui--loading::after) {
    content: "";
    position: absolute;
    top: 50%;
    right: 50px;
    transform: translateY(-50%);
    width: 16px;
    height: 16px;
    border: 2px solid rgba(130, 249, 161, 0.2);
    border-top-color: var(--pagefind-ui-primary);
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
  }

  @keyframes spin {
    to {
      transform: translateY(-50%) rotate(360deg);
    }
  }

  /* No Results State */
  :global(.pagefind-ui__message:empty) {
    display: none;
  }

  :global(.pagefind-ui__message:not(:empty)) {
    animation: fadeIn 0.3s ease;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Override default styles for dark theme */
  :global(.pagefind-ui .pagefind-ui__search-input) {
    background: rgba(28, 42, 52, 0.95);
    backdrop-filter: blur(10px);
    border: 2px solid var(--pagefind-ui-border);
    color: var(--pagefind-ui-text);
  }

  :global(.pagefind-ui .pagefind-ui__search-input:focus) {
    border-color: var(--pagefind-ui-primary);
    box-shadow: 0 0 0 4px rgba(130, 249, 161, 0.15);
  }

  :global(.pagefind-ui .pagefind-ui__results-area) {
    background: rgba(28, 42, 52, 0.98);
    backdrop-filter: blur(16px);
    border: 2px solid var(--pagefind-ui-border);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.4);
  }

  :global(.pagefind-ui .pagefind-ui__result) {
    background: rgba(74, 92, 107, 0.15);
    border: 1px solid rgba(74, 92, 107, 0.2);
  }

  :global(.pagefind-ui .pagefind-ui__result:hover) {
    background: rgba(130, 249, 161, 0.1);
    border-color: var(--pagefind-ui-primary);
  }
</style> 