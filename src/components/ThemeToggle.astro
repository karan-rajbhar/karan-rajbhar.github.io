<button class="theme-toggle" aria-label="Toggle dark mode">
  <svg class="sun-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <circle cx="12" cy="12" r="5"></circle>
    <line x1="12" y1="1" x2="12" y2="3"></line>
    <line x1="12" y1="21" x2="12" y2="23"></line>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
    <line x1="1" y1="12" x2="3" y2="12"></line>
    <line x1="21" y1="12" x2="23" y2="12"></line>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
  </svg>
  <svg class="moon-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
  </svg>
</button>

<script>
  const getTheme = (): 'light' | 'dark' => {
    if (typeof localStorage !== 'undefined') {
      const storedTheme = localStorage.getItem('theme');
      if (storedTheme === 'light' || storedTheme === 'dark') {
        return storedTheme;
      }
    }
    
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    
    return 'light';
  };

  const theme = getTheme();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle('dark');

    const isDark = element.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');

    // Add transition class to body for smooth theme change
    document.body.style.transition = 'background-color 0.5s cubic-bezier(0.4, 0, 0.2, 1), color 0.5s cubic-bezier(0.4, 0, 0.2, 1)';
    
    // Remove transition after animation completes
    setTimeout(() => {
      document.body.style.transition = '';
    }, 500);
  };

  const initThemeToggle = () => {
    const themeToggle = document.querySelector('.theme-toggle');
    if (themeToggle) {
      themeToggle.addEventListener('click', handleToggleClick);
    }
  };

  // Initialize on page load and view transitions
  document.addEventListener('DOMContentLoaded', initThemeToggle);
  document.addEventListener('astro:page-load', initThemeToggle);
</script>

<style>
  .theme-toggle {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.5rem;
    background: transparent;
    border: none;
    border-radius: 8px;
    color: var(--text-color);
    cursor: pointer;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
  }

  .theme-toggle:hover {
    background: rgba(130, 249, 161, 0.1);
    color: var(--accent-color);
    transform: translateY(-2px);
  }

  .theme-toggle:active {
    transform: translateY(0px);
  }

  .sun-icon,
  .moon-icon {
    width: 20px;
    height: 20px;
    position: absolute;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Sun icon animations */
  .sun-icon {
    opacity: 0;
    transform: rotate(-90deg) scale(0.5);
  }

  :global(.dark) .sun-icon {
    opacity: 1;
    transform: rotate(0) scale(1);
  }

  /* Moon icon animations */
  .moon-icon {
    opacity: 1;
    transform: rotate(0) scale(1);
  }

  :global(.dark) .moon-icon {
    opacity: 0;
    transform: rotate(90deg) scale(0.5);
  }

  /* Ripple effect */
  .theme-toggle::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    background: var(--accent-color);
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1),
                opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .theme-toggle:active::after {
    transform: translate(-50%, -50%) scale(1.5);
    opacity: 0.1;
  }

  @media (max-width: 768px) {
    .theme-toggle {
      padding: 0.4rem;
    }

    .sun-icon,
    .moon-icon {
      width: 18px;
      height: 18px;
    }
  }

  /* Disable hover effects on touch devices */
  @media (hover: none) {
    .theme-toggle:hover {
      background: transparent;
      transform: none;
    }
  }
</style> 